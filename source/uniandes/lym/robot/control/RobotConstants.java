/* Generated By:JavaCC: Do not edit this line. RobotConstants.java */
package uniandes.lym.robot.control;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface RobotConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int MOVE = 4;
  /** RegularExpression Id. */
  int RIGHT = 5;
  /** RegularExpression Id. */
  int LEFT = 6;
  /** RegularExpression Id. */
  int ROTATE = 7;
  /** RegularExpression Id. */
  int LOOK = 8;
  /** RegularExpression Id. */
  int N = 9;
  /** RegularExpression Id. */
  int E = 10;
  /** RegularExpression Id. */
  int W = 11;
  /** RegularExpression Id. */
  int S = 12;
  /** RegularExpression Id. */
  int DROP = 13;
  /** RegularExpression Id. */
  int FREE = 14;
  /** RegularExpression Id. */
  int PICK = 15;
  /** RegularExpression Id. */
  int POP = 16;
  /** RegularExpression Id. */
  int CHECK = 17;
  /** RegularExpression Id. */
  int C = 18;
  /** RegularExpression Id. */
  int B = 19;
  /** RegularExpression Id. */
  int BLOCKED = 20;
  /** RegularExpression Id. */
  int NOP = 21;
  /** RegularExpression Id. */
  int BLOCK = 22;
  /** RegularExpression Id. */
  int REPEAT = 23;
  /** RegularExpression Id. */
  int IF = 24;
  /** RegularExpression Id. */
  int DEFINE = 25;
  /** RegularExpression Id. */
  int TO = 26;
  /** RegularExpression Id. */
  int OUTPUT = 27;
  /** RegularExpression Id. */
  int END = 28;
  /** RegularExpression Id. */
  int NUMERO = 29;
  /** RegularExpression Id. */
  int VARIABLE = 30;
  /** RegularExpression Id. */
  int DIGIT = 31;
  /** RegularExpression Id. */
  int LETTER = 32;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\r\"",
    "\"\\t\"",
    "\"MOVE\"",
    "\"RIGHT\"",
    "\"LEFT\"",
    "\"ROTATE\"",
    "\"LOOK\"",
    "\"N\"",
    "\"E\"",
    "\"W\"",
    "\"S\"",
    "\"DROP\"",
    "\"FREE\"",
    "\"PICK\"",
    "\"POP\"",
    "\"CHECK\"",
    "\"C\"",
    "\"B\"",
    "\"BLOCKED\"",
    "\"NOP\"",
    "\"BLOCK\"",
    "\"REPEAT\"",
    "\"IF\"",
    "\"DEFINE\"",
    "\"TO\"",
    "\"OUTPUT\"",
    "\"END\"",
    "<NUMERO>",
    "<VARIABLE>",
    "<DIGIT>",
    "<LETTER>",
    "\"\\n\"",
    "\"(\"",
    "\")\"",
    "\"[\"",
    "\"]\"",
  };

}
